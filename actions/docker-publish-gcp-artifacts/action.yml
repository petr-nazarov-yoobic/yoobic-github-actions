name: 'Publish docker image to google artifacts '
description: 'This action checks out the commit, and deploy docker to google artifacts.'
author: 'yoobic'
inputs:
  gcp_credentials:
    required: true
    description: 'The google credentials'
  docker_context:
    required: false
    description: The docker context. Default to .
    default: '.'
  docker_file:
    required: false
    description: The docker file. Default tp ./Dockerfile
    default: ./Dockerfile
  docker_build_args:
    required: false
    description: The docker build args
    default: |
      NODE_ENV=production
  image:
    required: false
    description: 'The name of the image'
  region:
    required: false
    description: 'The google region'
    default: europe-west1
  registry:
    required: false
    description: 'The name of the artifact registry'
    default: yoobic-docker-images

runs:
  using: 'composite'
  steps:
    - id: repoName
      if: ${{ !inputs.image }}
      uses: notiz-dev/github-action-json-property@release
      with:
        path: './package.json'
        prop_path: 'name'

    - if: ${{ !inputs.image }}
      shell: bash
      run: echo "dockerImageName=$(echo ${{ steps.repoName.outputs.prop }})" >> $GITHUB_ENV

    - if: ${{ inputs.image }}
      shell: bash
      run: echo "dockerImageName=$(echo ${{ inputs.image }})" >> $GITHUB_ENV

    - id: auth
      uses: google-github-actions/auth@v0.4.0
      with:
        credentials_json: ${{ inputs.gcp_credentials }}

    - name: Get current version of the package
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master

    - name: Authorize docker cli
      shell: bash
      run: |-
        gcloud --quiet auth configure-docker ${{ inputs.region }}-docker.pkg.dev

    - name: Create a key file
      run: 'echo "$GCP_KEY" > google-credentials.json'
      shell: bash
      env:
        GCP_KEY: ${{ inputs.gcp_credentials }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ inputs.region }}-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/${{ inputs.registry }}/${{ env.dockerImageName }}
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=raw,value=github-{{sha}}
        flavor: |
          latest=true
          prefix=
          suffix=

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push production image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        builder: ${{ steps.buildx.outputs.name }}
        build-args: ${{ inputs.docker_build_args }}
        secret-files: |
          "GOOGLE_CREDENTIALS_SECRET_FILE=./google-credentials.json"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
